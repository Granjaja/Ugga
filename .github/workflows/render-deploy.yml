name: Ugga application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image:postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB:
        ports:
          - 5432:5432
        options:  >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5        

    steps:
    - uses: actions/checkout@v4
    - name: checkout code 

    # ---FRONT END ---
    - name: Set Up Node.js 
      uses: actions/setup-node@v4
      with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test --if-present

      # ---- BACKEND ----
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install requirements.txt 
    
    - name: Run backend tests
      working-directory: ./backend
      run: pytest --maxfail=1 --disable-warnings -q

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Render backend deploy
        run: curl -X POST ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}

      - name: Trigger Render frontend deploy
        run: curl -X POST ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}
